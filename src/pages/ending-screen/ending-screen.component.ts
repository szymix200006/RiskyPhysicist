import { Component, inject } from '@angular/core';
import { GameService } from '../../services/game.service';
import { Router, RouterModule } from '@angular/router';

@Component({
  selector: 'app-ending-screen',
  imports: [RouterModule],
  template: `
    <main class="w-screen h-screen flex items-center justify-center">
      <section class="z-10 w-1/2 h-2/3 border-white rounded-2xl border-4 bg-emerald-600 p-4 box-border flex flex-col items-center justify-evenly shadow-md">
        <h1 class="text-4xl text-white font-extrabold animate-bounce">Results</h1>
        <section class="flex flex-col items-start justify-evenly h-2/3">
          @for(player of playersScores(); track player.id; let i = $index) {
            <span class="text-3xl font-bold text-white">{{i+1}}.&nbsp;&nbsp;{{player.name}}&nbsp;&nbsp;-&nbsp;&nbsp;{{player.balance}}$</span>
          } @empty {
            <h2 class="text-3xl font-bold text-red-600">No players were initialized!</h2>
          }
        </section>
        <button class="text-3xl text-white bg-sky-500 rounded-md px-10 py-5 hover:scale-110 duration-300 ease-in-out" (click)="onExitClick()">Exit</button>
      </section>
      <svg id="visual" preserveAspectRatio="none" viewBox="0 0 900 600" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="w-full h-full absolute">
        <path d="M0 283L12.5 254C25 225 50 167 75 137C100 107 125 105 150 118C175 131 200 159 225 180C250 201 275 215 300 207C325 199 350 169 375 153C400 137 425 135 450 143C475 151 500 169 525 172C550 175 575 163 600 165C625 167 650 183 675 190C700 197 725 195 750 188C775 181 800 169 825 162C850 155 875 153 887.5 152L900 151L900 0L887.5 0C875 0 850 0 825 0C800 0 775 0 750 0C725 0 700 0 675 0C650 0 625 0 600 0C575 0 550 0 525 0C500 0 475 0 450 0C425 0 400 0 375 0C350 0 325 0 300 0C275 0 250 0 225 0C200 0 175 0 150 0C125 0 100 0 75 0C50 0 25 0 12.5 0L0 0Z" fill="#fcd34d"></path>
        <path d="M0 433L12.5 424C25 415 50 397 75 385C100 373 125 367 150 360C175 353 200 345 225 346C250 347 275 357 300 356C325 355 350 343 375 340C400 337 425 343 450 347C475 351 500 353 525 359C550 365 575 375 600 380C625 385 650 385 675 370C700 355 725 325 750 321C775 317 800 339 825 338C850 337 875 313 887.5 301L900 289L900 149L887.5 150C875 151 850 153 825 160C800 167 775 179 750 186C725 193 700 195 675 188C650 181 625 165 600 163C575 161 550 173 525 170C500 167 475 149 450 141C425 133 400 135 375 151C350 167 325 197 300 205C275 213 250 199 225 178C200 157 175 129 150 116C125 103 100 105 75 135C50 165 25 223 12.5 252L0 281Z" fill="#fcd85d"></path>
        <path d="M0 487L12.5 487C25 487 50 487 75 475C100 463 125 439 150 435C175 431 200 447 225 451C250 455 275 447 300 446C325 445 350 451 375 449C400 447 425 437 450 431C475 425 500 423 525 432C550 441 575 461 600 463C625 465 650 449 675 439C700 429 725 425 750 433C775 441 800 461 825 459C850 457 875 433 887.5 421L900 409L900 287L887.5 299C875 311 850 335 825 336C800 337 775 315 750 319C725 323 700 353 675 368C650 383 625 383 600 378C575 373 550 363 525 357C500 351 475 349 450 345C425 341 400 335 375 338C350 341 325 353 300 354C275 355 250 345 225 344C200 343 175 351 150 358C125 365 100 371 75 383C50 395 25 413 12.5 422L0 431Z" fill="#fcdd6d"></path>
        <path d="M0 541L12.5 541C25 541 50 541 75 531C100 521 125 501 150 499C175 497 200 513 225 516C250 519 275 509 300 507C325 505 350 511 375 508C400 505 425 493 450 483C475 473 500 465 525 474C550 483 575 509 600 515C625 521 650 507 675 498C700 489 725 485 750 490C775 495 800 509 825 512C850 515 875 507 887.5 503L900 499L900 407L887.5 419C875 431 850 455 825 457C800 459 775 439 750 431C725 423 700 427 675 437C650 447 625 463 600 461C575 459 550 439 525 430C500 421 475 423 450 429C425 435 400 445 375 447C350 449 325 443 300 444C275 445 250 453 225 449C200 445 175 429 150 433C125 437 100 461 75 473C50 485 25 485 12.5 485L0 485Z" fill="#fce27c"></path>
        <path d="M0 601L12.5 601C25 601 50 601 75 601C100 601 125 601 150 601C175 601 200 601 225 601C250 601 275 601 300 601C325 601 350 601 375 601C400 601 425 601 450 601C475 601 500 601 525 601C550 601 575 601 600 601C625 601 650 601 675 601C700 601 725 601 750 601C775 601 800 601 825 601C850 601 875 601 887.5 601L900 601L900 497L887.5 501C875 505 850 513 825 510C800 507 775 493 750 488C725 483 700 487 675 496C650 505 625 519 600 513C575 507 550 481 525 472C500 463 475 471 450 481C425 491 400 503 375 506C350 509 325 503 300 505C275 507 250 517 225 514C200 511 175 495 150 497C125 499 100 519 75 529C50 539 25 539 12.5 539L0 539Z" fill="#fde68a"></path>
      </svg>
    </main>
  `,
  styleUrl: './ending-screen.component.css'
})
export class EndingScreenComponent {
  game = inject(GameService);
  router = inject(Router);
  playersScores = this.game.getSortedPlayers();

  onExitClick(): void {
    this.router.navigate(['/home']);
  }
}
